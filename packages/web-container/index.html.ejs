<!DOCTYPE html>
<html<%- helpers.makeHtmlAttributes(data.attributes.html) %>>
<head>
  <% data.meta.forEach((m) => { %>
    <meta<%- helpers.makeHtmlAttributes(m) %>>
  <% }); %>
  <title><%= data.title %></title>
  <!-- <link rel="manifest" href="manifest.json" crossorigin="use-credentials"> -->
  <% Object.keys(data.bundle.css).forEach((s) => { %>
    <link href="<%- data.bundle.css[s] %>?<%= data.compilationTimestamp %>" rel="stylesheet">
  <% }); %>
  <script src="//cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js"></script>
  <script>if (typeof requirejs === 'undefined') { document.write('<script src="js/require.js?<%= data.compilationTimestamp %>">\x3C/script>') }</script>
  <style>
    .splash-banner {
      display: flex;
      flex-direction: row;
      justify-content: center;
      align-items: center;
      padding: 0.5rem;
      height: 100%;
    }
    #splash-loading{
      height: 100%;
    }
    .splash-loading-hide {
      display: none;
    }
  </style>
</head>
<body>
  <div id="splash-loading" class="splash-banner splash-loading splash-loading-hide"><h3>Loading... Please wait.</h3></div>
  <div id="owncloud"></div>
  <noscript>
    <div class="splash-banner"><h3>Please enable JavaScript</h3></div>
  </noscript>
  <script>
    var loader = document.getElementById('splash-loading')
    var loaderTimer = setTimeout(function () {  
      loader.classList.remove('splash-loading-hide')
    }, 1000);

    function displayError() {
      loader.classList.remove('splash-loading-hide')
      loader.innerHTML = "<h3>Oops. Something went wrong.</h3>"
    }

    if (typeof requirejs === 'undefined') {
      displayError()
    } else {
      requirejs.config({
        baseUrl: <%- JSON.stringify(data.roots.js) %>,
        paths: <%- JSON.stringify(data.bundle.js) %>,
        waitSeconds: 20
      })

      requirejs(['web-runtime'], function (runtime) {
        clearTimeout(loaderTimer)
        document.getElementById('splash-loading').classList.add('splash-loading-hide')
        runtime.bootstrap('config.json').then(runtime.renderSuccess).catch(runtime.renderFailure)
      }, function(e) {
        displayError()
        throw e
      })
    }
    
  </script>
</body>
</html>
